/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.13 public/models/guy.glb 
*/

import React, { useRef, useState, useEffect } from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'


export function Guy({ props, setIsMoving}) {
  const group = useRef()
  const { nodes, materials, animations } = useGLTF('./models/guy.glb')
  const { actions } = useAnimations(animations, group)
  const [animation, setAnimations] = useState({ 
    run: 'CharacterArmature|Run',
    stop: "CharacterArmature|Idle"
})

  useEffect(() => {
    if(setIsMoving === true ){ 
    actions[animation.run].reset().fadeIn(0.5).play();
    }else{
        actions[animation.run].reset().fadeIn(0.5).stop();
        actions[animation.stop].reset().fadeIn(0.5).play();
     
    }
    return () => actions[animation]?.fadeOut(0.5);
  }, [animation, setIsMoving]);


  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Root_Scene">
        <group name="RootNode">
          <group name="CharacterArmature" rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <primitive object={nodes.Root} />
          </group>
          <group name="Casual_Feet" rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <skinnedMesh name="Casual_Feet_1" geometry={nodes.Casual_Feet_1.geometry} material={materials.White} skeleton={nodes.Casual_Feet_1.skeleton} />
            <skinnedMesh name="Casual_Feet_2" geometry={nodes.Casual_Feet_2.geometry} material={materials.Purple} skeleton={nodes.Casual_Feet_2.skeleton} />
          </group>
          <group name="Casual_Legs" rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <skinnedMesh name="Casual_Legs_1" geometry={nodes.Casual_Legs_1.geometry} material={materials.Skin} skeleton={nodes.Casual_Legs_1.skeleton} />
            <skinnedMesh name="Casual_Legs_2" geometry={nodes.Casual_Legs_2.geometry} material={materials.LightBlue} skeleton={nodes.Casual_Legs_2.skeleton} />
          </group>
          <group name="Casual_Head" rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <skinnedMesh name="Casual_Head_1" geometry={nodes.Casual_Head_1.geometry} material={materials.Skin} skeleton={nodes.Casual_Head_1.skeleton} />
            <skinnedMesh name="Casual_Head_2" geometry={nodes.Casual_Head_2.geometry} material={materials.Eyebrows} skeleton={nodes.Casual_Head_2.skeleton} />
            <skinnedMesh name="Casual_Head_3" geometry={nodes.Casual_Head_3.geometry} material={materials.Eye} skeleton={nodes.Casual_Head_3.skeleton} />
            <skinnedMesh name="Casual_Head_4" geometry={nodes.Casual_Head_4.geometry} material={materials.Hair} skeleton={nodes.Casual_Head_4.skeleton} />
          </group>
          <group name="Casual_Body" position={[0, 0.007, 0]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <skinnedMesh name="Casual_Body_1" geometry={nodes.Casual_Body_1.geometry} material={materials.Purple} skeleton={nodes.Casual_Body_1.skeleton} />
            <skinnedMesh name="Casual_Body_2" geometry={nodes.Casual_Body_2.geometry} material={materials.Skin} skeleton={nodes.Casual_Body_2.skeleton} />
          </group>
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('./models/guy.glb')
